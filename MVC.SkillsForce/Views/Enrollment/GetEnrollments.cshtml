@model IEnumerable<Common.SkillsForce.ViewModel.EnrollmentViewModel>

@{
    ViewBag.Title = "Index";
}

<style>
   

</style>



<div class="container mt-5">
    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
    </p>

    <div class="">
        
        <table class="table table-striped mx-auto">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrollmentID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    @*<th>
                            @Html.DisplayNameFor(model => model.TrainingID)
                        </th>*@
                    <th>
                        @Html.DisplayNameFor(model => model.TrainingName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DepartmentName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrollmentDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrollmentStatus)
                    </th>
                    <th>
                        View
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.EnrollmentID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        @*<td>
                                @Html.DisplayFor(modelItem => item.TrainingID)
                            </td>*@
                        <td>
                            @Html.DisplayFor(modelItem => item.TrainingName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DepartmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EnrollmentDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EnrollmentStatus)
                        </td>
                        <td>
                            @if (item.EnrollmentStatus != "Approved")
                            {
                                <button class="btn btn-primary approve-btn" data-enrollment-id="@item.EnrollmentID">Approve</button>
                            }
                            else
                            {
                                <span class="badge badge-success">Approved</span>
                            }
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary view-attachments-btn" data-toggle="modal" data-target="#attachmentModal" onclick="showAttachments(@item.EnrollmentID)">View Attachments</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Modal to display attachments -->
<div class="modal fade" id="attachmentModal" tabindex="-1" role="dialog" aria-labelledby="registrationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="registrationModalLabel">View Prerequisite Attachment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <!-- Attachments will be displayed here -->
            <div class="modal-body" id="attachmentModalBody"></div>


            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>



@section scripts {
    <script>
      

            $(".approve-btn").click(function () {
                var button = $(this);
                var enrollmentId = button.data("enrollment-id");
                console.log(enrollmentId)

                $.ajax({
                    url: '/Enrollment/ApproveEnrollment',
                    type: 'POST',
                    data: { enrollmentId: enrollmentId },
                    success: function (result) {
                        if (result.success) {
                            // Update the UI without reloading the page
                            button.closest('tr').find('td:last-child').html('<span>Approved</span>');
                            // You might want to disable the button or perform other UI updates as needed
                            button.prop('disabled', true);
                        } else {
                            // Handle the case where the approval was not successful
                            alert('Error approving enrollment: ' + result.message);
                        }
                    },
                    error: function () {
                        // Handle error
                        alert('Error approving enrollment.');
                    }
                });
            });



            function showAttachments(enrollmentId) {

                console.log(enrollmentId)
                // Make an AJAX request to get attachments by enrollment ID
                $.ajax({
                    url: '/Attachment/GetAllAttachmentByEnrollmentID',
                    type: 'GET',
                    data: { enrollmentID: parseInt(enrollmentId) },
                    dataType: "json",
                    success: function (result) {

                        console.log('in success ' + enrollmentId)
                        // Populate the modal body with attachment data

                        var attachments = result.result
                        var modalBody = $('#attachmentModalBody');
                        modalBody.empty();

                        for (let i = 0; i < attachments.length; i++) {
                            // Customize this part based on your attachment data structure
                            var attachmentInfo = attachments[i];
                            console.log('in show attach id' + attachmentInfo.AttachmentID)
                            // Add a download button for each attachment
                            var downloadButton = $('<button class="btn btn-success download-attachment-btn" data-attachment-id="' + attachmentInfo.AttachmentID + '">Download</button>');

                            // Append download button and attachment info to modal body
                            modalBody.append('<p>' + attachmentInfo.AttachmentURL + '</p>');
                            modalBody.append(downloadButton);

                            // Attach click event for download button
                            downloadButton.click(function () {
                                var attachmentId = $(this).data("attachment-id");

                                // Trigger download when the button is clicked
                                window.location.href = '/Attachment/DownloadAttachmentByAttachmentID/' + attachmentId;
                            });
                        }

                        // Show the modal
                        $('#attachmentModal').modal('show');
                    },
                    error: function (e) {
                        // Handle error
                        debugger;
                        alert('Error fetching attachments.');
                    }
                });
            }
        

        
    </script>
}
