
@model IEnumerable<Common.SkillsForce.Entity.TrainingModel>

@{
    ViewBag.Title = "Index";
}


@*<link rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
    crossorigin="anonymous" />*@




<h2>Index</h2>
<h2>@Session["Firstname"]</h2>
<h2>@Session["Email"]</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@


<table id="trainingTable" class="table">
    <thead>
        <tr>
            <th>Training ID</th>
            <th>Training Name</th>
            <th>Training Description</th>
            <th>Registration Deadline</th>
            <th>Capacity</th>
            <th>Department ID</th>
            <th></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>


<!-- Registration Modal with File Upload -->
<div class="modal fade" id="enrollModal" tabindex="-1" role="dialog" aria-labelledby="registrationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="registrationModalLabel">Training Registration</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <!-- Modified form with added onsubmit attribute -->
            <form id="enrollForm" onsubmit="saveEnrollment(); return false;">
                <div class="modal-body" id="modalBody">
                    <h3>Enroll in Training</h3>
                    <p>Your User ID: <span id="userIdInfo"></span></p>
                    <p id="trainingInfo"></p>

                    <label>You must meet all the following prerequisites:</label>
                    <div id="coursesCheckboxList"></div>

                    <button type="submit" class="btn btn-primary" id="saveBtn">Save</button>
                </div>
            </form>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<!--<div class="modal fade" id="enrollModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Enroll in Training</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <form id="enrollmentForm">
                <div class="modal-body">
                    <p>Your User ID: <span id="userIdInfo"></span></p>
                    <p id="trainingInfo"></p>

                    <label>You must meet all the following prerequisites:</label>
                    <div id="coursesCheckboxList"></div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="saveEnrollment()">Save changes</button>
                </div>
            </form>


        </div>
    </div>
</div>-->


<div id="trainingCardContainer" class="card-deck"></div>


<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>

    document.addEventListener("DOMContentLoaded", function () {

        function loadData() {
            fetch('/Enrollment/ViewTrainingData', {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            })
                .then(response => {
                    if (response.ok) {
                        return response.json()
                    }
                    else {
                        console.log(response.status)
                    }
                })
                .then(data => updateTable(data))
                .catch(error => console.error('Error:', error));
        }

        function updateTable(data) {
            console.log('here');
            var cardContainer = document.querySelector('#trainingCardContainer');
            cardContainer.innerHTML = '';

            data.forEach(function (item) {
                let currentDate = new Date().toJSON().slice(0, 10);
                var registrationDeadlineDate = new Date(parseInt(item.RegistrationDeadline.substr(6)));
                var isEnrollmentOpen = registrationDeadlineDate >= new Date();

                var card = document.createElement('div');
                card.className = 'card mb-3';

                card.innerHTML = `
            <div class="card-body">
                <h5 class="card-title">${item.TrainingName}</h5>
                <p class="card-text">${item.TrainingDescription}</p>
                <p class="card-text"><strong>Registration Deadline:</strong> ${formatDate(registrationDeadlineDate)}</p>
                <p class="card-text"><strong>Capacity:</strong> ${item.Capacity}</p>
                <p class="card-text"><strong>Department ID:</strong> ${item.DepartmentID}</p>
                ${isEnrollmentOpen ? `<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#enrollModal" onclick="enroll(${item.TrainingID})">Enroll</button>` : 'Enrollment Closed'}

            </div>
        `;

                cardContainer.appendChild(card);
            });
        }

        // format date in 'YYYY-MM-DD'
        function formatDate(date) {
            var year = date.getFullYear();
            var month = ('0' + (date.getMonth() + 1)).slice(-2);
            var day = ('0' + date.getDate()).slice(-2);
            return year + '-' + month + '-' + day;
        }

        loadData();
    });
</script>



<script>
    function enroll(trainingId) {
        // Set the training information in the modal
        /*$("#trainingInfo").text("Enroll in Training: " + trainingId);*/

        // Retrieve user information from the session
        //var userId = 1;


        var userId = parseInt("@HttpContext.Current.Session["UserID"]");

        console.log(userId)
        $("#trainingInfo").text("Enroll in Training: " + trainingId);
        $("#userIdInfo").text("User : " + userId);

        // Store the training ID in a data attribute of the modal
        $("#enrollModal").data("trainingId", trainingId);


        var enrollmentData = {
            UserID: userId,
            TrainingID: trainingId,

        };

        console.log(enrollmentData)
        // Call the controller action to get prerequisites
        $.ajax({
            url: '/Enrollment/GetPrerequisiteByTrainingID',
            type: 'GET',
            data: { TrainigID: trainingId },
            success: function (prerequisites) {
                console.log(prerequisites);
                populateCoursesCheckboxList(prerequisites);

                // Now that prerequisites are fetched, show the modal


                // Optionally, you can also trigger the save enrollment function here if needed
                // saveEnrollment();
            },
            error: function () {
                alert("Failed to fetch prerequisites!");
            }
        });
    }

    function populateCoursesCheckboxList(prerequisites) {
        var container = $("#coursesCheckboxList");
        container.empty();

        for (var i = 0; i < prerequisites.length; i++) {
            var prerequisite = prerequisites[i];

            var row = $('<div class="row mb-2">' +
                '<div class="col-2"><span class="badge bg-primary">' + prerequisite.PrerequisiteID + '</span></div>' +
                '<div class="col-6">' + prerequisite.PrerequisiteName + '</div>' +
                '<div class="col-4">' +
                '<div class="input-group">' +
                '<input type="file" class="form-control fileUploader" id="fileInput' + prerequisite.PrerequisiteID + '" required >' +
                '</div>' +
                '</div>' +
                '</div>');

            container.append(row);
        }
    }

    //function uploadDocument(prerequisiteId) {
    //    // Handle the upload logic here
    //    var fileInput = $("#fileInput" + prerequisiteId);
    //    var fileName = fileInput.val().split('\\').pop();
    //    alert("Upload button clicked for prerequisite ID: " + prerequisiteId + "\nSelected File: " + fileName);
    //}//function uploadDocument(prerequisiteId) {
    //    // Handle the upload logic here
    //    var fileInput = $("#fileInput" + prerequisiteId);
    //    var fileName = fileInput.val().split('\\').pop();
    //    alert("Upload button clicked for prerequisite ID: " + prerequisiteId + "\nSelected File: " + fileName);
    //}

    function uploadFiles(trainingId, enrollmentId) {
        console.log('entered fucntion pload')
        const fileInputs = document.getElementsByClassName('fileUploader');
        //const files = fileInput[0].files;

        const formData = new FormData();
        const fileData = [];

        for (const input of fileInputs) {
            var files = input.files;
            for (const element of files) {
                formData.append('files', element);
            }
        }
        console.log(formData)
        // Append training ID, user ID, and generated enrollment ID to the form data
        formData.append('TrainingID', parseInt(trainingId));
        formData.append('UserID', parseInt("@HttpContext.Current.Session["UserID"]")); // Replace with the actual user ID
        formData.append('EnrollmentID', parseInt(enrollmentId));
        console.log(formData)


        fetch('/Enrollment/UploadFiles', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                console.log("File uploaded");
                console.log(formData)
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }


    function saveEnrollment() {
        //var trainingId = $("#enrollModal").data("trainingId");
        var trainingId = parseInt($("#enrollModal").data("trainingId"));
        var saveButton = $("#saveBtn");
        //var trainingId = $("#trainingInfo").text().split(":")[1].trim();
        //var departmentId = $("#departmentDropdown").val();
        console.log("Insave "+trainingId);

        var userId = 1;
        console.log(userId)

        // Ajax request to send data to the controller
        $.ajax({
            url: '/Enrollment/SaveEnrollment',
            type: 'POST',
            data: {
                UserID: parseInt(userId),
                TrainingID: trainingId,
                // Add other data such as departmentId if needed
                //courses: selectedCourses
            },
            success: function (result) {
                var generatedEnrollmentId = result.EnrollmentID;
                uploadFiles(parseInt(trainingId), parseInt(generatedEnrollmentId));

                alert("Enrollment successful!");
                saveButton.prop('disabled', true);

                //
                $("#enrollModal").modal("hide");
                // Check if the modal is currently visible before trying to hide it
                //if ($("#enrollModal").is(':visible')) {
                //    // Hide the modal after successful enrollment
                //    $("#enrollModal").modal("hide");

                //    // Check if the modal backdrop exists before removing it
                //    if ($('.modal-backdrop').length > 0) {
                //        $('body').removeClass('modal-open');
                //        $('.modal-backdrop').remove();
                //    }
                //}
            },
            error: function () {
                alert("Enrollment failed!");
            }
        });
    }

</script>


