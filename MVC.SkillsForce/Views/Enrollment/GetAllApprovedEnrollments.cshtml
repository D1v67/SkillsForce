@model IEnumerable<Common.SkillsForce.ViewModel.EnrollmentViewModel>

@{
    ViewBag.Title = "Index";
}

<style>
</style>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">

<div class="container-fluid mt-4">


    @if (Model.Any())
    {

        <p>
            <button id="automaticSelectionBtn" class="btn btn-primary" disabled>Automatic Selection</button>
        </p>


        <div class="table-bordered table-hover table-responsive">
            @foreach (var group in Model.GroupBy(m => m.TrainingName))
            {
                <h3>@group.Key  <span id="@group.First().TrainingID" class="capacity"></span> </h3> 

                <button class="btn btn-success export-btn" data-training-id="@group.First().TrainingID">Export CSV</button>


                <script>
                    var trainingId = @group.First().TrainingID;

                    $(document).ready(function () {
            
                        $('#@group.First().TrainingID')
                        $.ajax({
                            url: '/Training/GetRemainingCapacityById?id=' + '@group.First().TrainingID',
                            type: 'GET',
                            success: function (data) {
                                if (data.success) {
                                    $('#@group.First().TrainingID').html(' - Remaining Capacity: ' + data.capacity);
                                    checkAllPrerequisitesFetched();
                                } else {
                                    toastr.error(data.message);
                                }
                            },
                            error: function () {
                                toastr.error('Error retrieving capacity for ' + '@group.Key');
                            }
                        });
                    });

                    function checkAllPrerequisitesFetched() {
                    
                        var allPrerequisitesFetched = true;
                        $('.capacity').each(function () {
                            if ($(this).text().trim() === '') {
                                allPrerequisitesFetched = false;
                                return false;
                            }
                        });

                        if (allPrerequisitesFetched) {
                            $('#automaticSelectionBtn').prop('disabled', false);
                        }
                    }
                </script>

                <table class="table table-striped mx-auto ">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.EnrollmentID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.UserID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.LastName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TrainingID)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TrainingName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.DepartmentName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EnrollmentDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EnrollmentStatus)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TrainingDepartmentName)
                            </th>
                            <th>
                                Selection Status
                            </th>
                            <th>
                                Select
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in group)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnrollmentID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TrainingID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TrainingName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DepartmentName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EnrollmentStatus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TrainingDepartmentName)
                                </td>
                                <td>
                                    @if (item.IsSelected)
                                    {
                                        <span class="text-success">Selected</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">Not Selected</span>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-success" onclick="confirmSelection('@item.EnrollmentID')">Confirm Selection</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            No enrollments found for automatic processing.
        </div>
    }

</div>
    <script>
        function confirmSelection(EnrollmentID) {
        
            alert('Confirming selection for ' + EnrollmentID);

        }


        $(document).ready(function () {
            $('#automaticSelectionBtn').click(function () {
                $.ajax({
                    url: '/Enrollment/RunAutomaticSelectionOfApprovedEnrollments',
                    type: 'POST',
                    success: function (data) {
                        if (data.success) {
                            toastr.success('Automatic processing successful');

                            if (data.messages && data.messages.length > 0) {
                                data.messages.forEach(message => {
                                    toastr.success(message);
                                });
                            }

                            setTimeout(() => {

                                window.location = data.url;
                            }, 2000)

                            //window.location = data.url;
                        } else {
                           // toastr.error('Automatic processing failed');

                            if (data.errors && data.errors.length > 0) {
                                data.errors.forEach(error => {
                                    toastr.error(error);
                                });
                            }
                        }
                    },
                    error: function () {
                        toastr.error('Error in the automatic processing');
                    }
                });
            });
        });
    </script>


    <script>
        $(document).ready(function () {
            $('.export-btn').click(function () {
                var trainingId = $(this).data('training-id');

                $.ajax({
                    url: '/ExportData/ExportSelectedEmployeeByTrainingCSV',
                    type: 'POST',
                    data: { trainingId: trainingId },
                    success: function (data) {
                        if (data.success) {
                 
                            toastr.success(data.message);
                        } else {
                 
                            toastr.error(data.message);
                        }
                    },
                    error: function () {
                        console.error('Error exporting CSV');
                    }
                });
            });

           
        });
    </script>