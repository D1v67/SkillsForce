
@{
    ViewBag.Title = "Enrollment Page";
}

<script src="~/Scripts/jquery-3.7.1.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js" integrity="sha512-VEd+nq25CkR676O+pLBnDW09R7VQX9Mdiij052gVCp5yVH3jGtH70Ho/UUv4mJDsEdTvqRCFZg0NKGiojGnUCw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script type="text/javascript" src="
    https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
@*
    https://codeseven.github.io/toastr/*@
<script type="text/javascript" src="
    https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
<link rel="stylesheet" href="
    https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
<style>
    #toast-container > div {
        opacity: 1;
    }


</style>




<div class="table-responsive container-fluid mt-5 mb-5">


    @if (Session["CurrentRole"].ToString() == "Admin")
    {
        <p>
            <button id="automaticSelectionBtn" class="btn btn-primary">Automatic Selection</button>
        </p>
    }



    <div class="container-fluid mt-3">
        <div class="row justify-content-center">

            <div class="col-md-4">
                <div class="form-group">
                    <label for="department">Select your Training:</label>
                    <select class="form-control" id="training" name="training" required>
                        <!-- <option value="" selected disabled>Select Training</option> -->
                    </select>
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label for="statusDropdown">Select Enrollment Status:</label>
                    <select class="form-control" id="statusDropdown"></select>
                </div>
            </div>

            <div class="col-md-4 mt-3">
                <button id="filterButton" class="btn btn-primary w-100">Filter</button>
                <button id="viewAllButton" class="btn btn-secondary w-100">View All</button>
            </div>

        </div>
    </div>


    <br />

    <button class="btn btn-success export-btn">Export Selected Employees to CSV</button>


    <div class="container-fluid mt-3">
        <div id="enrollmentTableContainer">
            <table id="enrollmentTable" class="table table-striped table-hover table-bordered mt-4">
                <thead>
                    <tr>
                        <th>Enrollment ID</th>
                        <th>User ID</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Training ID</th>
                        <th>Training Name</th>
                        <th>Department Name</th>
                        <th>Training Department Name</th>
                        <th>Enrollment Date</th>
                        <th>Enrollment Status</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>




<link href="
https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css"
      rel="stylesheet" />
<script defer src="
https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script defer src="
https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>
<link href="
https://cdn.datatables.net/1.13.7/css/dataTables.bootstrap5.min.css"
      rel="stylesheet" />
<script defer src="
https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
<script defer src="


https://cdn.datatables.net/1.13.7/js/dataTables.bootstrap5.min.js"></script>


<script>

    $(document).ready(function () {

         var userId = parseInt("@HttpContext.Current.Session["UserID"]");

        $('#automaticSelectionBtn').click(function () {
            $.ajax({
                url: '/Enrollment/RunAutomaticSelectionOfApprovedEnrollments',
                type: 'POST',
                data: { userId: userId },
                success: function (data) {
                    if (data.success) {
                        toastr.success('Automatic processing successful');

                        if (data.messages && data.messages.length > 0) {
                            data.messages.forEach(message => {
                                toastr.success(message);
                            });
                        }
                        setTimeout(() => {

                            window.location = data.url;
                        }, 2000)

                    } else {

                        if (data.errors && data.errors.length > 0) {
                            data.errors.forEach(error => {
                                toastr.error(error);
                            });
                        }
                    }
                },
                error: function () {
                    toastr.error('Error in the automatic processing');
                }
            });
        });
    });
</script>

<script>
    $(document).ready(function () {

        populateStatusDropdown();
        loadTrainings();

        // Initially hide the export button
        var isFilterButtonClicked = false;

        $('.export-btn').hide();

        var selectedTrainingName;

        $('#filterButton').on('click', function () {
            isFilterButtonClicked = true;
            filterEnrollments();
        });

        $('#viewAllButton').on('click', function () {
            viewAllEnrollments();
        });

        $('.export-btn').on('click', function () {
            exportSelectedEmployeeByTrainingCSV();
        });

        $('#enrollmentTable').DataTable({
            "ajax": {
                "url": "/Enrollment/GetAllEnrollmentsData", 
                "type": "POST",  
                "datatype": "json",
                "dataSrc": function (data) {
                    console.log('Data retrieved successfully:', data);
                    // Check if data is null
                    if (data === null || data.length === 0) {
                        $('#EnrollmentsMessage').show();
                        $('#enrollmentTableContainer').hide();
                        return [];
                    } else {
                        $('#EnrollmentsMessage').hide();
                        $('#enrollmentTableContainer').show();
                        return data;
                    }
                },
                "error": function (xhr, error, thrown) {
                    console.error('Error fetching data:', error);
                }
            },
            "columns": [
                { "data": "EnrollmentID" },
                { "data": "UserID" },
                { "data": "FirstName" },
                { "data": "LastName" },
                { "data": "TrainingID" },  
                { "data": "TrainingName" },
                { "data": "DepartmentName" },
                { "data": "TrainingDepartmentName" },  
                {
                    "data": "EnrollmentDate",
                    "render": function (data) {
                        return formatDateTime(data);
                    }
                },
                {
                    "data": 'EnrollmentStatus',
                    render: function (data, type, row) {
                        var badgeClass = '';
                        if (data === 'Approved') {
                            badgeClass = 'badge bg-success';
                        } else if (data === 'Rejected') {
                            badgeClass = 'badge bg-danger';
                        } else if (data === 'Pending') {
                            badgeClass = 'badge bg-secondary';
                        }
                        return `<span class="${badgeClass}">${data}</span>`;
                    }
                },
            ]
        });




        function formatDateTime(timestamp) {

            if (!timestamp) {
                return '';  
            }
            // Extracting only unix timestamp
            var match = timestamp.match(/\d+/);
            var numericPart = match ? match[0] : null;

            // Make sure to treat as millisecond
            const dateObject = new Date(parseInt(numericPart, 10))
            const day = String(dateObject.getDate()).padStart(2, '0')
            const month = String(dateObject.getMonth() + 1).padStart(2, '0')
            const year = dateObject.getFullYear()
            return `${year}-${month}-${day}`
        }

        function populateStatusDropdown() {
            $.ajax({
                url: '/Enrollment/GetEnrollmentStatusOptions', 
                type: 'GET',
                success: function (data) {
                    var dropdown = $('#statusDropdown');
                    dropdown.empty();
                    $.each(data, function (key, entry) {
                        dropdown.append($('<option></option>').attr('value', entry).text(entry));
                    });
                },
                error: function (error) {
                    console.log('Error in Status dropdown')
                }
            });
        }


        function loadTrainings() {

            $.ajax({
                type: "GET",
                url: "/Training/GetAll",
                dataType: "json",
                success: function (response) {

                    console.log(response)

                    var departmentDropdown = $("#training");
                    departmentDropdown.empty();

                    departmentDropdown.append('<option value="" selected disabled>Select Department</option>');

                    response.forEach(function (department, index) {
                        var option = $("<option>")
                            .attr("value", department.TrainingID)
                            .text(department.TrainingName);

                        departmentDropdown.append(option);
                    });
                },
                error: function (error) {
                    //toastr.error('Failed to load departments. Please try again.');
                }
            });
        }

        // Function to validate if a department is selected
        function isDepartmentSelected() {
            var selectedDepartment = $('#training').val();
            if (!selectedDepartment) {
                // Display a toast message or any other alert
                console.log('Please select a department.');

                toastr.error('Please select a department.')
                return false;
            }
            return true;
        }

        function updateDataTable(enrollments) {
            var dataTable = $('#enrollmentTable').DataTable();
            dataTable.clear().rows.add(enrollments).draw();
        }


        // Function to perform filter based on selected options
        function filterEnrollments() {

            if (!isDepartmentSelected()) {
                return; 

            }
            var selectedTraining = $('#training').val();
            var selectedStatus = $('#statusDropdown').val();

            console.log(selectedTraining)
            console.log(selectedStatus)

            var selectedStatus = $('#statusDropdown').val();

            if (selectedStatus === 'Selected') {
                $('.export-btn').show();
            } else {
                $('.export-btn').hide();
            }


            $('#enrollmentTable').attr('data-selected-training', selectedTraining);

            selectedTrainingName = $('#training option:selected').text();

            console.log('training name  ' + selectedTrainingName)

            $.ajax({
                url: '/Enrollment/FilterEnrollments', 
                type: 'POST',
                data: { trainingId: selectedTraining, status: selectedStatus },
                success: function (data) {

                    console.log(data)
                    updateDataTable(data);


                    console.log('in filter succes ' + selectedTraining)
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.error('Filter error:', textStatus, errorThrown);

                    if (xhr.status === 400) {
                        console.log('Validation errors:', xhr.responseJSON);
                    } else {
                        console.log('Unexpected error. Please try again later.');
                    }
                }
            });

            isFilterButtonClicked = false;
        }

        function viewAllEnrollments() {

            $('.export-btn').hide();

            $('#enrollmentTable').attr('data-selected-training', null);


            $.ajax({
                url: '/Enrollment/GetAllEnrollmentsData',
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    console.log('All enrollments:', data);

                    updateDataTable(data);
;
                },
                error: function (error) {
                    console.error('Error:', error.responseText);
                }
            });
        }


        function exportSelectedEmployeeByTrainingCSV() {
            var selectedTraining = $('#enrollmentTable').attr('data-selected-training');

            console.log('in expor tfunc ' + selectedTraining)

            if (selectedTraining === null) {
                console.log('View All is selected. Do appropriate handling.');
                return;
            }


            if (!selectedTraining) {
                // Handle the case where no training is selected
                console.log('No training selected for export.');
                toastr.error('No training selected for export.')
                return;
            }

            fetch(`/ExportData/ExportSelectedEmployeeByTrainingCSV?trainingId=${selectedTraining}&trainingName=${selectedTrainingName}`, {
                method: 'POST'
            })
                .then(response => {
                    var fileName = response.headers.get('content-disposition').split('filename=')[1]

                    return response.blob().then(blob => {
                        const downloadLink = document.createElement('a')
                        downloadLink.href = URL.createObjectURL(blob)

                        downloadLink.download = fileName || 'ExportedUsers'

                        document.body.appendChild(downloadLink)
                        downloadLink.click()
                        document.body.removeChild(downloadLink)
                    })

                })
                .catch((error) => {
                    console.error(error)
                })

        }

    });
</script>
